services:
  # MySQL Database
  database:
    image: mysql:8.0
    container_name: learning-advisor-db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: learning_advisor
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    networks:
      - learning-advisor-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: learning-advisor-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: mysql://app_user:app_password@database:3306/learning_advisor
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      database:
        condition: service_healthy
    networks:
      - learning-advisor-network
    command: npm run dev

  # Spring Boot Backend API (parallel implementation)
  backend-springboot:
    build:
      context: ./backend-springboot
      dockerfile: Dockerfile
    container_name: learning-advisor-backend-springboot
    environment:
      DB_HOST: database
      DB_USER: app_user
      DB_PASSWORD: app_password
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 604800000
    ports:
      - "3002:3002"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - learning-advisor-network

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: learning-advisor-frontend
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - learning-advisor-network
    command: npm run dev

volumes:
  mysql_data:

networks:
  learning-advisor-network:
    driver: bridge